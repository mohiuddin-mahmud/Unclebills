@model KitModel
@using Nop.Plugin.Misc.ProductKits.Models
@using Nop.Web.Framework
@using Nop.Web.Framework.UI
@using Nop.Core.Infrastructure

@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Plugins.Misc.ProductKits.Edit").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Nop.Plugin.Misc.ProductKits.List");
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "kit-form" }))
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Plugins.Misc.ProductKits.Edit") for @Model.ProductName (@Model.ProductSku)
            <small><i class="fa fa-arrow-circle-left"></i><a href="/Admin/Plugins/Misc/ProductKits/Index">@T("Nop.Plugin.Misc.ProductKits.BackToList").Text</a></small>
        </h1>
        <div class="pull-right">
            &nbsp;
        </div>
    </div>

    <div class="raw clearfix">
        <div class="col-md-7">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Plugins.Misc.ProductKits.Edit.List")
                    </div>
                    <div class="panel-body">
                        <div id="products-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#products-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "/Admin/Plugins/Misc/ProductKits/KitList",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "ProductId",
                                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: "<input type='checkbox' value='#=ProductId#' class='checkboxGroups'/>",
                                            width: 50
                                        },
                                        {
                                            field: "ProductName",
                                            title: "@T("Admin.Catalog.Products.Fields.Name")",
                                            width: 300
                                        }, {
                                            field: "ProductSku",
                                            title: "@T("Admin.Catalog.Products.Fields.Sku")",
                                            width: 100
                                        }, {
                                            field: "ProductAttributeName",
                                            title: "@T("Admin.Catalog.Products.Fields.ProductType")",
                                            width: 100
                                        }
                                    ]
                                });
                            });
                        </script>

                        <button type="button" id="delete-selected" class="btn bg-red" style="margin-top: 10px;">
                            <i class="fa fa-trash-o"></i>
                            @T("Admin.Common.Delete.Selected")
                        </button>
                    </div>
                </div>
            </div>

            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Plugins.Misc.ProductKits.Edit.Price")
                    </div>
                    <div class="panel-body" style="height: 150px;">
                        <script type="text/javascript">
                            $(document).ready(function() {
                                $('#updatePrice').click(function() {
                                    var kitPrice = $("#@Html.FieldIdFor(model => model.Price)").val();

                                    $('#updatePrice').attr('disabled', true);

                                    var postData = {
                                        KitProductId: @Model.ProductId,
                                        Price: kitPrice
                                    };
                                    addAntiForgeryToken(postData);

                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "/Admin/Plugins/Misc/ProductKits/UpdatePrice",
                                        data: postData,
                                        success: function(data) {
                                            $('#updatePrice').attr('disabled', false);
                                        },
                                        error: function(xhr, ajaxOptions, thrownError) {
                                            alert('Failed to update price.');
                                            $('#updatePrice').attr('disabled', false);
                                        }
                                    });
                                });
                            });
                        </script>
                        <div class="content">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-md-3">
                                        @Html.NopLabelFor(model => model.Price)
                                    </div>
                                    <div class="col-md-9">
                                        @Html.NopEditorFor(model => model.Price)
                                        @Html.ValidationMessageFor(model => model.Price)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-9 col-md-offset-3">
                                        <input type="submit" id="updatePrice" class="btn btn-primary" value="@T("Plugins.Misc.ProductKits.Edit.UpdatePrice")" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Plugins.Misc.ProductKits.Edit.Add")
                    </div>
                    <div class="panel-body">
                        <script type="text/javascript">
                            $(document).ready(function() {
                                $('#addProduct').click(function() {                                  
                                    var productSku = $("#@Html.FieldIdFor(model => model.AddProductToKit.ProductSku)").val();
                                    var productAttributeName = $("#@Html.FieldIdFor(model => model.AddProductToKit.ProductAttributeName)").val();
                                    var kitPrice = $("#@Html.FieldIdFor(model => model.Price)").val();

                                    $('#addProduct').attr('disabled', true);

                                    var postData = {
                                        KitProductId: @Model.ProductId,
                                        ProductSku: productSku,
                                        ProductAttributeName: productAttributeName,
                                        Price: kitPrice
                                        };
                                    addAntiForgeryToken(postData);

                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "/Admin/Plugins/Misc/ProductKits/AddProduct",
                                        data: postData,
                                        success: function(data) {
                                            //reload grid
                                            var grid = $('#products-grid').data('kendoGrid');
                                            grid.dataSource.read();
                                            $('#addProduct').attr('disabled', false);
                                        },
                                        error: function(xhr, ajaxOptions, thrownError) {
                                            alert('Failed to add product.');
                                            $('#addProduct').attr('disabled', false);
                                        }
                                    });
                                });
                            });
                        </script>
                        <div class="content">
                            <div class="form-horizontal">
                                <div class="form-group prod-type">
                                    <div class="col-md-3">
                                        @Html.NopLabelFor(model => model.AddProductToKit.ProductAttributeName)
                                    </div>
                                    <div class="col-md-9">
                                        @Html.NopEditorFor(model => model.AddProductToKit.ProductAttributeName)
                                        @Html.ValidationMessageFor(model => model.AddProductToKit.ProductAttributeName)
                                        <text>
                                            <script type="text/javascript">
                                                $(document).ready(function() {
                                                    $('#AddProductToKit_ProductAttributeName').autocomplete({
                                                        source: '/Admin/Plugins/Misc/ProductKits/ProductAttributeAutoComplete'
                                                    });
                                                });
                                            </script>
                                        </text>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        @Html.NopLabelFor(model => model.AddProductToKit.ProductSku)
                                    </div>
                                    <div class="col-md-9">
                                        @Html.NopEditorFor(model => model.AddProductToKit.ProductSku)
                                        @Html.ValidationMessageFor(model => model.AddProductToKit.ProductSku)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-9 col-md-offset-3">
                                        <input type="submit" id="addProduct" class="btn btn-primary" value="@T("Plugins.Misc.ProductKits.Edit.AddProduct")" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script type="text/javascript">
    var selectedIds = [];

    $(document).ready(function () {
        //delete selected
        $('#delete-selected').click(function(e) {
            e.preventDefault();
            var kitPrice = $("#@Html.FieldIdFor(model => model.Price)").val();

            var postData = {
                KitProductId: @Model.ProductId,
                Price: kitPrice,
                SelectedIds: selectedIds
            };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "/Admin/Plugins/Misc/ProductKits/DeleteSelected",
                data: postData,
                complete: function(data) {
                    //reload grid
                    var grid = $('#products-grid').data('kendoGrid');
                    grid.dataSource.read();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                },
                traditional: true
            });
            return false;
        });

        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
        });

        //wire up checkboxes.
        $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
    });

    function additionalData() {
        var data = {
            ProductId: @Model.ProductId
            };
        addAntiForgeryToken(data);
        return data;
    }

    function onDataBound(e) {
        $('#products-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            //set checked based on if current checkbox's value is in selectedIds.
            $(this).attr('checked', checked > -1);
        });

        updateMasterCheckbox();
    }

    function updateMasterCheckbox() {
        var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
        var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
</script>
}
